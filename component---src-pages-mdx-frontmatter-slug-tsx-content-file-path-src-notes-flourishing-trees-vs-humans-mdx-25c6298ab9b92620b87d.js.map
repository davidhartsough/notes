{"version":3,"file":"component---src-pages-mdx-frontmatter-slug-tsx-content-file-path-src-notes-flourishing-trees-vs-humans-mdx-25c6298ab9b92620b87d.js","mappings":"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","sources":["webpack://daves-notes/./src/notes/flourishing-trees-vs-humans.mdx","webpack://daves-notes/./src/pages/{mdx.frontmatter__slug}.tsx","webpack://daves-notes/./src/components/layout.tsx","webpack://daves-notes/./src/components/meta.tsx","webpack://daves-notes/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"If I were to travel around the world and ask everyone, \\\"What does flourishing mean for apple trees? How would you describe a flourishing apple tree?\\\" Nearly everyone would say, \\\"A flourishing apple tree would grow to be big, strong, and beautiful, and it would be fruitful with the biggest and most delicious fruit it can bear.\\\" (And I might add that they'd be Jonathan apples. Just sayin'.)\"), \"\\n\", React.createElement(_components.p, null, \"But now what if I travelled the world and asked everyone, \\\"What does human flourishing look like? How would you describe a flourishing human?\\\" Nearly everyone would have a different answer. There would certainly be some recurring themes, but on the whole, humanity has not yet well defined what flourishing means for its own kind. What if humanity came to an agreed upon definition of human flourishing? I believe it would be immensely beneficial, and therefore should be a paramount priority for humanity now.\"), \"\\n\", React.createElement(_components.p, null, \"So if we, humanity, are going to come to an agreement on what it means for humans to flourish, we might as well start with those recurring themes that most everyone seems to recognize.\"), \"\\n\", React.createElement(_components.p, null, \"I believe that the best attempt at defining human flourishing was done by the widely renowned Abraham Maslow. In his hierarchy of needs, self-actualization is the peak of human flourishing. Had he created the hierarchy of needs for apple trees, fruitfulness might have been at the top of the pyramid with only the same general idea of physiological needs below that. Humans are clearly much more complex and have a handful of steps between having our physiological needs met and achieving self-actualization. Maslow's idea of self-actualization may be the most widely accepted notion of human flourishing. I believe this is because, when we first were introduced to Maslow's Hierarchy of Needs, we thought his ideas on the steps to self-actualization were a bit obvious. In a way, Maslow didn't exactly present any new ideas. We all know we have a base level of physiological needs with the additional needs of safety, love/belonging, and esteem atop of that.\"), \"\\n\", React.createElement(_components.p, null, \"Often this is the case in science, and in positive psychology, many ancient but transcendent philosophical ideas turn into a more well established, defined, and accepted truism. The positive psychologists use data to backup some of the most basic ideas that have been recognized and passed on since the dawn of civilization -- only this time, they put a name to it and sometimes make it a tad more complicated so that the idea will be published and spread and the layperson will come across a ridiculous clickbait headline on social media that brings the person to say, \\\"Aha! I knew it! I was just talking about this with Steve the other day. Now I'll just share with him without actually reading any of the article.\\\" The world will then be a better place because both the layperson and Steve will confidently believe the basic idea the positive psychologist proved. Cheers and applause ensue.\"), \"\\n\", React.createElement(_components.p, null, \"What are those basic ideas? What ideas from Maslow's Hierarchy of Needs did we already recognize as one of our unspoken truths?\"), \"\\n\", React.createElement(_components.p, null, \"… \", React.createElement(_components.em, null, \"To be continued…\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/davehartsough/projects/dh/notes/src/notes/flourishing-trees-vs-humans.mdx\";\nimport React from \"react\";\nimport Layout from \"../components/layout\";\nimport Meta from \"../components/meta\";\nconst query = \"3157264825\";\nexport const Head = _ref => {\n  var _data$mdx, _data$mdx$frontmatter, _data$mdx2, _data$mdx2$frontmatte, _data$mdx3, _data$mdx3$frontmatte;\n  let {data} = _ref;\n  return React.createElement(Meta, {\n    page: ((_data$mdx = data.mdx) === null || _data$mdx === void 0 ? void 0 : (_data$mdx$frontmatter = _data$mdx.frontmatter) === null || _data$mdx$frontmatter === void 0 ? void 0 : _data$mdx$frontmatter.title) || \"\",\n    path: ((_data$mdx2 = data.mdx) === null || _data$mdx2 === void 0 ? void 0 : (_data$mdx2$frontmatte = _data$mdx2.frontmatter) === null || _data$mdx2$frontmatte === void 0 ? void 0 : _data$mdx2$frontmatte.slug) || \"\",\n    description: ((_data$mdx3 = data.mdx) === null || _data$mdx3 === void 0 ? void 0 : (_data$mdx3$frontmatte = _data$mdx3.frontmatter) === null || _data$mdx3$frontmatte === void 0 ? void 0 : _data$mdx3$frontmatte.description) || \"\"\n  });\n};\nfunction NotePage(_ref2) {\n  var _data$mdx4;\n  let {data, children} = _ref2;\n  const note = (_data$mdx4 = data.mdx) === null || _data$mdx4 === void 0 ? void 0 : _data$mdx4.frontmatter;\n  return React.createElement(Layout, {\n    title: (note === null || note === void 0 ? void 0 : note.title) || \"\",\n    path: (note === null || note === void 0 ? void 0 : note.slug) || \"\"\n  }, React.createElement(\"h1\", null, note === null || note === void 0 ? void 0 : note.title), React.createElement(\"p\", null, React.createElement(\"em\", null, React.createElement(\"small\", null, note === null || note === void 0 ? void 0 : note.date))), children);\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(NotePage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./styles.css\";\n\nexport default function Layout({\n  title,\n  path,\n  children,\n}: {\n  title?: string;\n  path?: string;\n  children: React.JSX.Element | React.JSX.Element[];\n}) {\n  return (\n    <main>\n      <nav>\n        <a href=\"https://davidhartsough.com/\">Dave</a>\n        {\" / \"}\n        <Link to=\"/\">Notes</Link>\n        {path && title && (\n          <>\n            {\" / \"}\n            <Link to={`/${path}`}>{title}</Link>\n          </>\n        )}\n      </nav>\n      <section>{children}</section>\n    </main>\n  );\n}\n","import React from \"react\";\n\nconst siteName = \"Dave's Notes\";\nconst baseUrl = \"https://davidhartsough.com/\";\nconst url = `${baseUrl}notes/`;\n\nexport default function Meta({\n  page = \"\",\n  description,\n  path = \"\",\n}: {\n  page?: string;\n  description: string;\n  path?: string;\n}) {\n  const title = page ? `${page} • ${siteName}` : siteName;\n  const trailingSlash = path ? \"/\" : \"\";\n  return (\n    <>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta\n        name=\"keywords\"\n        content=\"Dave, David, Hartsough, notes, thoughts, thinking, document, writing, note\"\n      />\n      <meta name=\"author\" content=\"David Hartsough\" />\n      <link rel=\"canonical\" href={`${url}${path}${trailingSlash}`} />\n      <meta name=\"application-name\" content={siteName} />\n      <meta property=\"og:type\" content={path ? \"article\" : \"website\"} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:url\" content={`${url}${path}${trailingSlash}`} />\n      <meta property=\"og:site_name\" content={siteName} />\n      <meta property=\"og:locale\" content=\"en_US\" />\n      <meta property=\"og:image\" content={`${baseUrl}icon.png`} />\n      <meta property=\"og:image:alt\" content=\"Dave's logo icon\" />\n      <meta property=\"og:image:type\" content=\"image/png\" />\n      <meta property=\"og:image:width\" content=\"512\" />\n      <meta property=\"og:image:height\" content=\"512\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={`${url}icon.png`} />\n      <meta name=\"twitter:image:alt\" content=\"Dave's logo icon\" />\n      <meta name=\"twitter:image:type\" content=\"image/png\" />\n      <meta name=\"twitter:image:width\" content=\"512\" />\n      <meta name=\"twitter:image:height\" content=\"512\" />\n      <link\n        rel=\"icon\"\n        href={`${baseUrl}favicon.ico`}\n        type=\"image/x-icon\"\n        sizes=\"any\"\n      />\n      <link\n        rel=\"icon\"\n        href={`${baseUrl}favicon-16x16.png`}\n        type=\"image/png\"\n        sizes=\"16x16\"\n      />\n      <link\n        rel=\"icon\"\n        href={`${baseUrl}favicon-32x32.png`}\n        type=\"image/png\"\n        sizes=\"32x32\"\n      />\n      <link\n        rel=\"icon\"\n        href={`${baseUrl}icon192.png`}\n        type=\"image/png\"\n        sizes=\"192x192\"\n      />\n      <link\n        rel=\"apple-touch-icon\"\n        href={`${baseUrl}apple-touch-icon.png`}\n        type=\"image/png\"\n        sizes=\"180x180\"\n      />\n    </>\n  );\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","_provideComponents","components","React","wrapper","MDXLayout","Head","_ref","_data$mdx","_data$mdx$frontmatter","_data$mdx2","_data$mdx2$frontmatte","_data$mdx3","_data$mdx3$frontmatte","data","Meta","page","mdx","frontmatter","title","path","slug","description","NotePage","_ref2","_data$mdx4","children","note","Layout","date","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","href","Link","to","siteName","baseUrl","url","trailingSlash","name","content","rel","property","type","sizes","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}